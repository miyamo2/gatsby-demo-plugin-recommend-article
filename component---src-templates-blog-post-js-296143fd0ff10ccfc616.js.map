{"version":3,"file":"component---src-templates-blog-post-js-296143fd0ff10ccfc616.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js","webpack://gatsby-starter-blog/./src/templates/blog-post.js"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n\n  return (\n    <div className=\"bio\">\n      {author?.name && (\n        <p>\n          `gatsby-demo-plugin-recommend-article`のデモです。\n          このサイト内の記事は生成AIを用いて生成しているため、内容には誤りが含まれる可能性があります。\n          また記事内の記載はすべてフィクションであり、実在の人物・団体・場所とは一切関係ありません。\n        </p>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n  let header\n\n  if (isRootPath) {\n    header = (\n      <h1 className=\"main-heading\">\n        <Link to=\"/\">{title}</Link>\n      </h1>\n    )\n  } else {\n    header = (\n      <Link className=\"header-link-home\" to=\"/\">\n        {title}\n      </Link>\n    )\n  }\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <header className=\"global-header\">{header}</header>\n      <main>{children}</main>\n      <footer>\n        © {new Date().getFullYear()}, Built with\n        {` `}\n        <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n        <br />\n        powered by{` `}\n        <a href={\"https://github.com/gatsbyjs/gatsby-starter-blog\"}>\n          Gatsby Starter Blog\n        </a>\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogPostTemplate = ({\n  data: { previous, next, site, markdownRemark: post },\n  location,\n}) => {\n  const siteTitle = site.siteMetadata?.title || `Title`\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <p>{post.frontmatter.date}</p>\n        </header>\n        <div>\n          {post.frontmatter.tags.map(tag => {\n            return <span>#{tag} </span>\n          })}\n        </div>\n        <br />\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <hr />\n        <footer>\n          <Bio />\n        </footer>\n      </article>\n      <h2>関連記事</h2>\n      <ol style={{ listStyle: `none` }}>\n        {post.recommends.map(recommend => {\n          const title = recommend.frontmatter.title || recommend.fields.slug\n          return (\n            <li key={recommend.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h3>\n                    <Link to={recommend.fields.slug} itemProp=\"url\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h3>\n                  <small>{recommend.frontmatter.date}</small>\n                </header>\n                <div>\n                  {recommend.frontmatter.tags.map(tag => {\n                    return <span>#{tag} </span>\n                  })}\n                </div>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: recommend.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </li>\n          )\n        })}\n      </ol>\n    </Layout>\n  )\n}\n\nexport const Head = ({ data: { markdownRemark: post } }) => {\n  return (\n    <Seo\n      title={post.frontmatter.title}\n      description={post.frontmatter.description || post.excerpt}\n    />\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($id: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160, truncate: true)\n      html\n      recommends {\n        excerpt(pruneLength: 160, truncate: true)\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          tags\n        }\n      }\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        tags\n      }\n    }\n  }\n`\n"],"names":["Bio","_data$site$siteMetada","author","useStaticQuery","site","siteMetadata","React","className","name","_ref","location","title","children","isRootPath","pathname","header","Link","to","Date","getFullYear","href","_site$siteMetadata","_site$siteMetadata2","_site$siteMetadata2$s","description","metaDescription","defaultTitle","content","property","social","twitter","Head","_ref2","data","markdownRemark","post","Seo","frontmatter","excerpt","previous","next","siteTitle","Layout","itemScope","itemType","itemProp","date","tags","map","tag","dangerouslySetInnerHTML","__html","html","style","listStyle","recommends","recommend","fields","slug","key"],"sourceRoot":""}